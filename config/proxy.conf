upstream back-server {
    server back:8080 ;
}

upstream front-server {
    server front:80 ;
}

server {      #Monitor port 443
    listen    443 ssl;
    server_name  cp23us1.sit.kmutt.ac.th;             #domain name
    large_client_header_buffers 4 32k;
    client_max_body_size 10M;

    # Add ssl
    #ssl on;        #If you force HTTP access, this line should be opened
    ssl_certificate /ssl/www-001.crt;   #The crt file storage path of nginx for ssl certificate of domain name application
    ssl_certificate_key /ssl/privatekey.key;      #Storage path of nginx key file of ssl certificate for domain name application
    
    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    # Specify the password as a format supported by openssl
    ssl_protocols  TLSv1.2;

    ssl_ciphers  HIGH:!aNULL:!MD5;  # Password encryption method
    ssl_prefer_server_ciphers  on;   # Server passwords that rely on SSLv3 and TLSv1 protocols will take precedence over client passwords

    add_header X-Frame-Options SAMEORIGIN always;
    # add_header Content-Security-Policy "default-src 'self' 'unsafe-eval' https://cdnjs.cloudflare.com; 
    #                                style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; 
    #                                font-src 'self' fonts.gstatic.com https://cdnjs.cloudflare.com;
    #                                script-src 'self' 'unsafe-inline'";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # add_header Content-Type "text/html";
    add_header X-Content-Type-Options "nosniff";
    # add_header Cache-Control "private, no-cache, no-store, max-age=0, must-revalidate";
    add_header Cache-Control "public, max-age=604800, immutable";
    # Define the index directory and name of the first page        

    types {
        text/html html htm;
        text/css css;
        image/jpeg jpg jpeg;
        image/png png;
        application/javascript js; 
    }
    location / {
        proxy_pass http://front-server;
    }

    location /api {
        proxy_pass http://back-server;
    }
}
server{   #Monitor port 80
	listen 80;
    	server_name cp23us1.sit.kmutt.ac.th; 
    	rewrite ^/(.*)$ https://$host/us1/$1 permanent;
        # All connections that arrive here are converted to https
}