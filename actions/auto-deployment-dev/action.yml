# .github/actions/build-push-image/action.yml

name: 'auto deploy on dev server'
description: 'deploy on dev server'

inputs:
  RESTART:
    description: 'down service before up again'
    default: 'no'
    type: choice
    options:
      - 'yes'
      - 'no'
  DEV_PWD:
    description: 'dev server password'
    required: true
  DEV_ADMIN:
    description: 'dev server admin username'
    required: true
  DEV_HOSTNAME:
    description: 'dev server hostname'
    required: true
  TUS_GH_USER:
    description: 'TUS_GH_USER'
    required: true
  GHCR_PAT:
    description: 'GHCR_PAT'
    required: true
  MYSQL_ROOT_PASSWORD:
    description: 'MYSQL_ROOT_PASSWORD'
    required: true
  MYSQL_DATABASE:
    description: 'MYSQL_DATABASE'
    required: true
  MYSQL_USER:
    description: 'MYSQL_USER'
    required: true
  MYSQL_PASSWORD:
    description: 'MYSQL_PASSWORD'
    required: true

runs:
  using: 'composite'
  steps:
    - name: SSH into the Server and Run docker-compose
      shell: bash
      env:
        DEV_PWD: ${{ inputs.DEV_PWD }}
        DEV_ADMIN: ${{ inputs.DEV_ADMIN }}
        DEV_HOSTNAME: ${{ inputs.DEV_HOSTNAME }}
        TUS_GH_USER: ${{ inputs.TUS_GH_USER }}
        GHCR_PAT: ${{ inputs.GHCR_PAT }}
        MYSQL_ROOT_PASSWORD: ${{ inputs.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{inputs.MYSQL_DATABASE}}
        MYSQL_USER: ${{inputs.MYSQL_USER}}
        MYSQL_PASSWORD: ${{inputs.MYSQL_PASSWORD}}
        RESTART: ${{inputs.RESTART}}
      run: |
        sshpass -p $DEV_PWD ssh $DEV_ADMIN@$DEV_HOSTNAME << EOF
          export MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
          export MYSQL_DATABASE=$MYSQL_DATABASE
          export MYSQL_USER=$MYSQL_USER
          export MYSQL_PASSWORD=$MYSQL_PASSWORD

          docker login ghcr.io -u $TUS_GH_USER -p $GHCR_PAT
          
          if [[ -f "LC-Deployment" ]]
          then
            echo "LC-Deployment exists."
          else
            echo "not exist"
          fi  

          if [[ -f "LC-Deployment" ]]
          then
            echo "LC-Deployment exists."
          else
            yes | git clone git@github.com:SIT-LightCode/LC-Deployment.git
          fi          

          cd ~/LC-Deployment

          if [[ $RESTART = "yes" ]]
          then
            docker-compose -f docker-compose-dev.yml down
          fi

          if [[ -f "mysql.env" ]]
          then
            rm -rf mysql.env
          else
            echo "mysql.env does not exist."
          fi
          envsubst < mysql.env.tmpl > mysql.env

          if [[ -f "backend.env" ]]
          then
            rm -rf backend.env
          else
            echo "backend.env does not exist."
          fi
          envsubst < backend.env.tmpl > backend.env
          
          git pull
          docker-compose -f docker-compose-dev.yml pull
          docker-compose -f docker-compose-dev.yml up -d
          echo y | docker system prune -a
          exit
        EOF