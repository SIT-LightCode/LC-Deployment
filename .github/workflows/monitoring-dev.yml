name: Check Service Status

# on:
#   schedule:
#     - cron: "*/5 * * * *"

on:
  push:
    branches:
      - main # Change 'main' to the branch you want to trigger the workflow on

jobs:
  check_service_status:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up environment
        run: echo "DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}" >> $GITHUB_ENV

      - name: Send GET request to API
        id: api_request
        run: |
          API_RESPONSE='{"appName":"LightCode-Backend","services":[{"message":"LightCode DB","status":"Alive"}],"status":"Alive"}'
          echo "API_RESPONSE=${API_RESPONSE}" >> $GITHUB_ENV

      - name: Check API response status
        run: |
          STATUS=$(echo "${{ env.API_RESPONSE }}" | jq -r '.status')
          echo "STATUS=${STATUS}" >> $GITHUB_ENV
          if [ "$STATUS" = "Alive" ]; then
            echo "Service is alive."
            echo "SEND_DISCORD_MESSAGE=true" >> $GITHUB_ENV
          else
            echo "Service is not alive."
          fi

      - name: Send Discord message on success
        if: env.SEND_DISCORD_MESSAGE == 'true'
        run: |
          curl -X POST -H "Content-type: application/json" --data \
            "{\"content\":\"Service status: ${{ env.STATUS }}\"}" \
            ${{ env.DISCORD_WEBHOOK_URL }}
